stages:
  - "ðŸ”¨ build"
  - "ðŸš€ deploy"

build:
  stage: "ðŸ”¨ build"
  variables:
    APP_ENV: test
    DATABASE_URL: pgsql://precontest:precontest@postgres:5432/precontest?serverVersion=15
    COMPOSER_ALLOW_SUPERUSER: 1
    POSTGRES_DB: precontest
    POSTGRES_PASSWORD: precontest
    POSTGRES_USER: precontest
    BASE_URL: precontentieux.test
    MAILER_FROM: ne-pas-repondre@precontentieux.test
    MAILER_DSN: smtp://mailpit:1025
    CORS_ALLOW_ORIGIN: "*"
    EMAIL_FROM: ne-pas-repondre@precontentieux.test
    EMAIL_FROM_LABEL: "PrÃ©contentieux (test)"
    SYMFONY_DEPRECATIONS_HELPER: disabled
  services:
    - postgres:15-alpine
  image:
    name: php:8.2
  before_script:
    # Install required system packages
    - apt update -yqq
    - apt-get install -y zlib1g-dev libicu-dev g++ libpq-dev libzip-dev zip libldap2-dev libldap-common libfreetype6-dev libjpeg62-turbo-dev libpng-dev
    # Install PHP extensions
    - docker-php-ext-install zip
    - docker-php-ext-install intl
    - docker-php-ext-install calendar
    - docker-php-ext-install gd
    - docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql
    - docker-php-ext-install pdo pdo_pgsql pgsql
    - docker-php-ext-install sysvsem
    - docker-php-ext-configure ldap --with-libdir=lib/$(uname -m)-linux-gnu/
    - docker-php-ext-install ldap
    # Install composer
    - curl -sS https://getcomposer.org/installer | php
    # Install all project dependencies
    - php composer.phar install --no-interaction
    # Install node
    - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - apt-get install -y nodejs
    - npm update -g
    # Install npm dependencies
    - yarn install
  script:
    - echo "Building"
    - bin/console cache:clear
    - bin/console doctrine:migrations:migrate --no-interaction --all-or-nothing
    - yarn build
    - bin/phpunit
  artifacts:
    paths:
      - vendor/
      - public/
      - .env*
      - composer.lock
    expire_in: 05 min
  cache:
    paths:
      - vendor/

deploy-develop:
  stage: "ðŸš€ deploy"
  image:
    name: clevercloud/clever-tools:latest
  script:
    - echo "Deploying"
    - clever link $CC_APP_DEV_ID
    - clever deploy --alias precontentieux-dev --force
  only:
    - develop

deploy-prod:
  stage: "ðŸš€ deploy"
  image:
    name: clevercloud/clever-tools:latest
  script:
    - echo "Deploying"
    - clever link $CC_APP_PROD_ID
    - clever deploy --alias precontentieux-prod --force
  only:
    - prod
