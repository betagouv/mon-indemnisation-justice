/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../routes/root-fdo'
import { Route as AgentFdoIndexRouteImport } from './../../routes/agent/fdo/index'
import { Route as AgentFdoRootRouteImport } from './../../routes/agent/fdo/root'
import { Route as AgentFdoRequisitionSerrurierRouteImport } from './../../routes/agent/fdo/requisition-serrurier'
import { Route as AgentFdoFoireAuxQuestionsRouteImport } from './../../routes/agent/fdo/foire-aux-questions'
import { Route as AgentFdoErreurOperationnelleIndexRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/index'
import { Route as AgentFdoErreurOperationnelleMesDeclarationsRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/mes-declarations'
import { Route as AgentFdoErreurOperationnelleNouvelleDeclarationIndexRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/nouvelle-declaration/index'
import { Route as AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
import { Route as AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
import { Route as AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRouteImport } from './../../routes/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'

const AgentFdoIndexRoute = AgentFdoIndexRouteImport.update({
  id: '/agent/fdo/',
  path: '/agent/fdo/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentFdoRootRoute = AgentFdoRootRouteImport.update({
  id: '/agent/fdo/root',
  path: '/agent/fdo/root',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentFdoRequisitionSerrurierRoute =
  AgentFdoRequisitionSerrurierRouteImport.update({
    id: '/agent/fdo/requisition-serrurier',
    path: '/agent/fdo/requisition-serrurier',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoFoireAuxQuestionsRoute =
  AgentFdoFoireAuxQuestionsRouteImport.update({
    id: '/agent/fdo/foire-aux-questions',
    path: '/agent/fdo/foire-aux-questions',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleIndexRoute =
  AgentFdoErreurOperationnelleIndexRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/',
    path: '/agent/fdo/erreur-operationnelle/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleMesDeclarationsRoute =
  AgentFdoErreurOperationnelleMesDeclarationsRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/mes-declarations',
    path: '/agent/fdo/erreur-operationnelle/mes-declarations',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute =
  AgentFdoErreurOperationnelleNouvelleDeclarationIndexRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/',
    path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute =
  AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant',
    path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute =
  AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement',
    path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement',
    getParentRoute: () => rootRouteImport,
  } as any)
const AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute =
  AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRouteImport.update({
    id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation',
    path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/agent/fdo/foire-aux-questions': typeof AgentFdoFoireAuxQuestionsRoute
  '/agent/fdo/requisition-serrurier': typeof AgentFdoRequisitionSerrurierRoute
  '/agent/fdo/root': typeof AgentFdoRootRoute
  '/agent/fdo': typeof AgentFdoIndexRoute
  '/agent/fdo/erreur-operationnelle/mes-declarations': typeof AgentFdoErreurOperationnelleMesDeclarationsRoute
  '/agent/fdo/erreur-operationnelle': typeof AgentFdoErreurOperationnelleIndexRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation': typeof AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement': typeof AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant': typeof AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration': typeof AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute
}
export interface FileRoutesByTo {
  '/agent/fdo/foire-aux-questions': typeof AgentFdoFoireAuxQuestionsRoute
  '/agent/fdo/requisition-serrurier': typeof AgentFdoRequisitionSerrurierRoute
  '/agent/fdo/root': typeof AgentFdoRootRoute
  '/agent/fdo': typeof AgentFdoIndexRoute
  '/agent/fdo/erreur-operationnelle/mes-declarations': typeof AgentFdoErreurOperationnelleMesDeclarationsRoute
  '/agent/fdo/erreur-operationnelle': typeof AgentFdoErreurOperationnelleIndexRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation': typeof AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement': typeof AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant': typeof AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration': typeof AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/agent/fdo/foire-aux-questions': typeof AgentFdoFoireAuxQuestionsRoute
  '/agent/fdo/requisition-serrurier': typeof AgentFdoRequisitionSerrurierRoute
  '/agent/fdo/root': typeof AgentFdoRootRoute
  '/agent/fdo/': typeof AgentFdoIndexRoute
  '/agent/fdo/erreur-operationnelle/mes-declarations': typeof AgentFdoErreurOperationnelleMesDeclarationsRoute
  '/agent/fdo/erreur-operationnelle/': typeof AgentFdoErreurOperationnelleIndexRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation': typeof AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement': typeof AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant': typeof AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute
  '/agent/fdo/erreur-operationnelle/nouvelle-declaration/': typeof AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/agent/fdo/foire-aux-questions'
    | '/agent/fdo/requisition-serrurier'
    | '/agent/fdo/root'
    | '/agent/fdo'
    | '/agent/fdo/erreur-operationnelle/mes-declarations'
    | '/agent/fdo/erreur-operationnelle'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/agent/fdo/foire-aux-questions'
    | '/agent/fdo/requisition-serrurier'
    | '/agent/fdo/root'
    | '/agent/fdo'
    | '/agent/fdo/erreur-operationnelle/mes-declarations'
    | '/agent/fdo/erreur-operationnelle'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration'
  id:
    | '__root__'
    | '/agent/fdo/foire-aux-questions'
    | '/agent/fdo/requisition-serrurier'
    | '/agent/fdo/root'
    | '/agent/fdo/'
    | '/agent/fdo/erreur-operationnelle/mes-declarations'
    | '/agent/fdo/erreur-operationnelle/'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
    | '/agent/fdo/erreur-operationnelle/nouvelle-declaration/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AgentFdoFoireAuxQuestionsRoute: typeof AgentFdoFoireAuxQuestionsRoute
  AgentFdoRequisitionSerrurierRoute: typeof AgentFdoRequisitionSerrurierRoute
  AgentFdoRootRoute: typeof AgentFdoRootRoute
  AgentFdoIndexRoute: typeof AgentFdoIndexRoute
  AgentFdoErreurOperationnelleMesDeclarationsRoute: typeof AgentFdoErreurOperationnelleMesDeclarationsRoute
  AgentFdoErreurOperationnelleIndexRoute: typeof AgentFdoErreurOperationnelleIndexRoute
  AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute
  AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute
  AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute
  AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/agent/fdo/': {
      id: '/agent/fdo/'
      path: '/agent/fdo'
      fullPath: '/agent/fdo'
      preLoaderRoute: typeof AgentFdoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/root': {
      id: '/agent/fdo/root'
      path: '/agent/fdo/root'
      fullPath: '/agent/fdo/root'
      preLoaderRoute: typeof AgentFdoRootRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/requisition-serrurier': {
      id: '/agent/fdo/requisition-serrurier'
      path: '/agent/fdo/requisition-serrurier'
      fullPath: '/agent/fdo/requisition-serrurier'
      preLoaderRoute: typeof AgentFdoRequisitionSerrurierRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/foire-aux-questions': {
      id: '/agent/fdo/foire-aux-questions'
      path: '/agent/fdo/foire-aux-questions'
      fullPath: '/agent/fdo/foire-aux-questions'
      preLoaderRoute: typeof AgentFdoFoireAuxQuestionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/': {
      id: '/agent/fdo/erreur-operationnelle/'
      path: '/agent/fdo/erreur-operationnelle'
      fullPath: '/agent/fdo/erreur-operationnelle'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/mes-declarations': {
      id: '/agent/fdo/erreur-operationnelle/mes-declarations'
      path: '/agent/fdo/erreur-operationnelle/mes-declarations'
      fullPath: '/agent/fdo/erreur-operationnelle/mes-declarations'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleMesDeclarationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/nouvelle-declaration/': {
      id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/'
      path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration'
      fullPath: '/agent/fdo/erreur-operationnelle/nouvelle-declaration'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclarationIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant': {
      id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
      path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
      fullPath: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/3-requerant'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement': {
      id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
      path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
      fullPath: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/2-complement'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation': {
      id: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
      path: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
      fullPath: '/agent/fdo/erreur-operationnelle/nouvelle-declaration/1-operation'
      preLoaderRoute: typeof AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AgentFdoFoireAuxQuestionsRoute: AgentFdoFoireAuxQuestionsRoute,
  AgentFdoRequisitionSerrurierRoute: AgentFdoRequisitionSerrurierRoute,
  AgentFdoRootRoute: AgentFdoRootRoute,
  AgentFdoIndexRoute: AgentFdoIndexRoute,
  AgentFdoErreurOperationnelleMesDeclarationsRoute:
    AgentFdoErreurOperationnelleMesDeclarationsRoute,
  AgentFdoErreurOperationnelleIndexRoute:
    AgentFdoErreurOperationnelleIndexRoute,
  AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute:
    AgentFdoErreurOperationnelleNouvelleDeclaration1OperationRoute,
  AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute:
    AgentFdoErreurOperationnelleNouvelleDeclaration2ComplementRoute,
  AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute:
    AgentFdoErreurOperationnelleNouvelleDeclaration3RequerantRoute,
  AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute:
    AgentFdoErreurOperationnelleNouvelleDeclarationIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
