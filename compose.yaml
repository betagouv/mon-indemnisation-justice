services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-precondev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-precontentieux}
      POSTGRES_USER: ${POSTGRES_USER:-precontentieux}
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data:rw
      # To run init scripts, wipe the data dir (`rm -Rf .docker/postgres/data/*`) first
      - ./.docker/postgres/scripts/:/docker-entrypoint-initdb.d
    networks:
      mijnet:
        aliases:
          - postgres
    ports:
      - "5432:5432"

  nginx:
    hostname: nginx
    stdin_open: true
    tty: true
    build:
      dockerfile: .docker/nginx/Dockerfile
      context: .
    volumes:
      # Ce partage, via un volume, est requis afin que Nginx puisse servir les fichiers statiques seul
      - ./public:/app/public
    networks:
      mijnet:
        aliases:
          - mon-indemnisation.justice.gouv.dev
          - mon-indemnisation.justice.gouv.test
          - proconnect.gouv.test
          - franceconnect.gouv.test
    ports:
      - "80:80"
      - "443:443"

  # Mailpit: email SMTP + web UI to see trapped emails
  mailpit:
    image: axllent/mailpit
    networks:
      mijnet:
        aliases:
          - mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  # The Symfony app
  symfony:
    platform: linux/amd64
    hostname: symfony
    stdin_open: true
    tty: true
    # En attendant un accès à Harbor
    image: pierrelemee/precontentieux-full:latest
    command: bash -c 'update-ca-certificates && composer install --no-interaction --optimize-autoloader && bin/console doctrine:migration:migrate --no-interaction --all-or-nothing && yarn install && php-fpm'
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - TS=Europe/Paris
      - SYMFONY_DEPRECATIONS_HELPER=disabled
      - PANTHER_ERROR_SCREENSHOT_DIR=public/screenshots
      - PANTHER_ERROR_SCREENSHOT_ATTACH=true
      - PANTHER_FIREFOX_ARGUMENTS='-width=1200 -height=2000'
      - MAILPIT_URL=http://mailpit:8025
      - CHROMIUM_PATH=/usr/bin/google-chrome
    restart: always
    depends_on:
      - postgres
      - mailpit
    volumes:
      # Ce partage, via un volume, est requis afin que Symfony puisse lire les manifestes produits par `encore`
      - .:/app
      # Dossier à ne pas partager entre guest et host
      - /app/drivers
      - /app/vendor
      - /app/node_modules
      - ./.docker/nginx/ssl:/usr/local/share/ca-certificates
    networks:
      - mijnet
    ports:
      - "9000:9000"

  # Vite dev server (frontend assets)
  vite:
    image: node:22
    hostname: vite
    networks:
      mijnet:
        aliases:
          - vite
    command: bash -c 'yarn install && yarn dev -l info'
    working_dir: /app
    volumes:
      - .:/app
      # Dossier à ne pas partager entre guest et host
      - /app/node_modules
    ports:
      - "5173:5173"

  franceconnect:
    image: pierrelemee/mock-oidc-server
    hostname: franceconnect
    networks:
      mijnet:
        aliases:
          - franceconnect
    ports:
      - '9997:9997'
    environment:
      PORT: 9997
      HOST: '0.0.0.0'
      # Liste exhaustive des exemples : https://github.com/france-connect/sources/blob/main/docker/volumes/fcp-low/mocks/idp/databases/citizen/base.csv
      USERS: "/app/data/usagers.json"
    working_dir: /app
    volumes:
      - ./.docker/franceconnect:/app/data/

  proconnect:
    image: pierrelemee/mock-oidc-server
    hostname: proconnect
    networks:
      mijnet:
        aliases:
          - proconnect
    ports:
      - '9998:9998'
    environment:
      PORT: 9998
      HOST: '0.0.0.0'
      USERS: "/app/data/users.json"
    working_dir: /app
    volumes:
      - ./.docker/proconnect:/app/data/
  playwright:
    profiles:
      - playwright
    build:
      dockerfile: .docker/playwright/Dockerfile
      context: .
    hostname: playwright
    networks:
      mijnet:
        aliases:
          - playwright
    command: npx playwright test --ui-port=8080 --ui-host=0.0.0.0 --project firefox
    volumes:
      - .:/app
    expose:
      - "8080"
      - "3000"

networks:
  mijnet:
